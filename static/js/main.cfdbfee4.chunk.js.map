{"version":3,"sources":["Components/Alert.js","Components/About.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","className","style","height","alert","concat","type","role","msg","class","data-bs-dismiss","aria-label","About","myStyle","color","mode","backgroundColor","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","Fragment","dist","to","src","alt","title","onClick","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","divStyle","heading","onChange","event","console","log","target","value","rows","newText","toUpperCase","toLowerCase","split","map","el","charAt","slice","join","words","joinedWords","forEach","elem","undefined","reverse","trim","filter","element","length","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","Components_Alert","react_router_dist","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cfdbfee4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div className=\"con\" style={{height:'45px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>}\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\r\nimport React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n \r\n  const myStyle = {\r\n        color: props.mode ==='dark'?'white':'black',\r\n        backgroundColor: props.mode ==='dark'?'#193366':'#EDF5E1'\r\n  }\r\n\r\n  return (\r\n    <div className='container' style={{ color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1 className='aboutTitle mx-2 my-3'>About Us</h1>\r\n        <div className=\"accordion my-2\" id=\"accordionExample\" >\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>Analyze your text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n          TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count or charachter count.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n      Free software utility which allows you to count the number words and charachters. You can perform operations like convert text to upper-case or lower-case and many more. It also shows the average time required to read the text entered.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        <strong>Browser Compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        This word counter works in any web browser such as Chrome, Firefox, Safari, Micrsoft Edge, Opera, etc. It suits to count charachters in Facebook, Blog books, excel document, pdf document, essays, etc.   \r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  {/* <div className=\"container1 my-3\">\r\n  <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n  </div>\r\n   */}\r\n </div>\r\n  )\r\n  }\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <>\r\n    <section className=\"header\">\r\n        <nav className={`navbar sticky-top navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\"><img src=\"icon.png\" alt=\"icon\" height=\"22px\"/> {props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item \">\r\n          <Link className={`nav-link text-${props.mode==='light'?'dark':'light'}`}  to='/'>Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link text-${props.mode==='light'?'dark':'light'} `} to='/about'>About</Link>\r\n        </li>\r\n      \r\n      </ul>\r\n      \r\n    \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch aria-checked\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n</section>\r\n  </>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text, setText] = useState(\"\");\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was Clicked\" +text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handlelowClick = ()=>{\r\n      console.log(\"lowercase was Clicked\" +text);\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n  }\r\n  const clearText = ()=>{\r\n    \r\n    setText(\"\");\r\n}\r\nconst trimText = ()=>{\r\n  \r\n  setText(text.trim());\r\n}\r\n\r\nconst handleCapitalize = () => {\r\n  let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\r\n  setText(newText);\r\n}\r\nconst handleExtraSpaces = ()=>{\r\n  let words = text.split(' ');\r\n  let joinedWords = '';\r\n  // console.log(words);\r\n  words.forEach((elem)=>{\r\n      if(elem[0] !== undefined){\r\n          joinedWords += elem + \" \";\r\n          console.log(joinedWords);\r\n      }\r\n  })\r\n  setText(joinedWords);\r\n}\r\n\r\nconst reversed = () => {\r\n    let splitWord = text.split(\"\");\r\n\r\n    let reverseWord = splitWord.reverse(\"\");\r\n    let joinedWords = reverseWord.join(\"\");\r\n    let newText = joinedWords\r\n\r\n    setText(newText);\r\n  };\r\n\r\n     const handleOnchange =(event)=>{\r\n        console.log(\"on change function\");\r\n        setText(event.target.value)\r\n     }\r\n\r\n     let divStyle={\r\n      color: props.mode === 'dark'? 'white': 'black'\r\n\r\n     }\r\n   \r\n  return (\r\n    <> \r\n    <div className='constainer'>\r\n    <h1 style={divStyle}>{props.heading}</h1>\r\n     <div className=\"txt\" style={divStyle}>Enter your text here:</div>\r\n    <div className=\"mb-3\">\r\n    \r\n    <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'dark'? '#193366': 'white', color: props.mode === 'dark'? 'white': 'black' }} onChange={handleOnchange} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to upper case</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handlelowClick}>Convert to lower case</button>\r\n    <button className=\"btn btn-primary my-1 mx-1\" onClick={handleCapitalize}>Capitalize</button>\r\n    <button className=\"btn btn-primary my-1 mx-1\" onClick={handleExtraSpaces}>Remove extra space</button>\r\n    <button className=\"btn btn-primary my-1 mx-1\" onClick={reversed}>Reverse</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={clearText}>Clear text</button>\r\n    <button className=\"btn btn-primary my-1 mx-1\" onClick={trimText}>Trim</button>\r\n</div>\r\n<div className=\"constainer my-3\">\r\n  <h1 style={divStyle}>Your Text Summary</h1>\r\n  <p style={divStyle}>{text.split(\" \").filter((element)=>{return element.length!==0;}).length} words and {text.length} charachters</p>\r\n  <p style={divStyle}>{0.08*text.split(\" \").filter((element)=>{return element.length!==0;}).length} minutes to read</p>\r\n  <h2 style={divStyle}>Preview</h2>\r\n  <p style={divStyle}>{text}</p>\r\n</div></>\r\n \r\n  )\r\n}\r\n","\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport {\n\n  HashRouter,\n  Route,\n  Routes,\n} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] =useState(null);\n\nconst showAlert = (message, type)=>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(()=>\n    setAlert(null), 1500\n  );\n}\n\nconst togglemode= ()=>{\n  if(mode=== 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor= '#001133';\n    showAlert(\"Dark mode has been enabled\", \"success\");\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor= 'white';\n    showAlert(\"Light mode is enabled\", \"success\");\n  }\n}\n\n  return (\n    \n    \n    <HashRouter>\n  \n        <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          \n        <Routes>\n        <Route path='/' element={<TextForm mode={mode} heading=\"Try TextUtils - Utility to process text online\"/>}/>\n        <Route path='/about' element={<About mode={mode}/>}/>\n  </Routes>\n  </div>\n  </HashRouter>\n  \n  \n  \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}